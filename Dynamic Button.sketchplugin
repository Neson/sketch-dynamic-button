// Dynamic Button Plugin (cmd shift b)

/*
  Original code from https://github.com/ddwht/sketch-dynamic-button
  Fixed for Sketch 3.2 by Bohemian Coding
*/

function alert(msg, title) {
  title = title || "alert";
  var app = [NSApplication sharedApplication];
  [app displayDialog:msg withTitle:title];
}

function getBackgroundForGroup(group) {
  var groupLayers = [group layers];
  for (var i=0; i<[groupLayers count]; i++) {
    var layer = [groupLayers objectAtIndex:i];
    if ([layer name] == "BG") {
      return layer;
    }
  }
  return false;
}

function getButtonDimensionsForLayer(layer){
  log("getButtonDimensionsForLayer: " + [layer frame])
  var frame = [layer frame]
  var layerHeight = [frame height],
      layerWidth =  [frame width],
      layerX =      [frame x],
      layerY =      [frame y]

  var splitLayer = [layer name].split(':');
  var offsetTop,offsetRight,offsetRight,offsetLeft;
  switch(splitLayer.length) {
    case 1:
      layer.name = '0:0:0:0';
      offsetTop = offsetRight = offsetBottom = offsetLeft = 0;
      break;
    case 2:
      offsetTop = offsetBottom = parseInt(splitLayer[0]) || 0;
      offsetRight = offsetLeft = parseInt(splitLayer[1]) || 0;
      break;
    case 3:
      offsetTop = parseInt(splitLayer[0]) || 0;
      offsetRight = offsetLeft = parseInt(splitLayer[1]) || 0;
      offsetBottom = parseInt(splitLayer[2]) || 0;
      break;
    case 4:
      offsetTop = parseInt(splitLayer[0]) || 0;
      offsetRight = parseInt(splitLayer[1]) || 0;
      offsetBottom = parseInt(splitLayer[2]) || 0;
      offsetLeft = parseInt(splitLayer[3]) || 0;
      break;
    default:
      alert('Wrong format', 'Error');
  }
  return {
    x: layerX,
    y: layerY,
    width: layerWidth,
    height: layerHeight,
    offsetTop: offsetTop,
    offsetBottom: offsetBottom,
    offsetLeft: offsetLeft,
    offsetRight: offsetRight,
    totalWidth: (layerWidth + offsetLeft  + offsetRight),
    totalHeight: (layerHeight + offsetTop  + offsetBottom)
  }
}

if ([selection count] === 0) {
  alert('You need to select at least one layer', 'Selection is empty');
} else {
  for (var i=0; i < [selection count]; i++) {
    var currentLayer = [selection objectAtIndex:i],
        parentGroup = [currentLayer parentGroup];

    var BG = getBackgroundForGroup(parentGroup),
        buttonDimensions = getButtonDimensionsForLayer(currentLayer)

    if (BG) {
      // Update background
      var frame = [BG frame]
      [frame setHeight:buttonDimensions.totalHeight]
      [frame  setWidth:buttonDimensions.totalWidth]
      frame.x = 0
      frame.y = 0

      currentLayer.frame().x = buttonDimensions.offsetLeft;
      currentLayer.frame().y = buttonDimensions.offsetTop;
    } else {
      // Create group and background


      var group = MSLayerGroup.new();
      var groupFrame = group.frame();
      groupFrame.setConstrainProportions(false);
      group.setName('Dynamic group');

      parentGroup.addLayers([group]);
      parentGroup.removeLayer(currentLayer);
      group.addLayers([currentLayer]);


      var BGLayer = parentGroup.addLayerOfType('rectangle');
      var BGframe = BGLayer.frame();
      BGframe.setWidth(currentLayer.frame().width());
      BGframe.setHeight(currentLayer.frame().height());
      BGframe.setX(currentLayer.frame().x());
      BGframe.setY(currentLayer.frame().y());
      BGLayer.name = "BG";
      BGLayer.style().fills().addNewStylePart();
      BGLayer.select_byExpandingSelection_(true,false);
      parentGroup.removeLayer(BGLayer);
      group.addLayers([BGLayer]);
      [[doc actionWithName:"MSMoveToBackAction"] performAction:nil];
      group.resizeRoot();
    }
  }
}
